Using contract tester version 0.8.0
(1/3)🧬Compiling contract: CasinoGame_flattened_v_20852978_1747841172.sol
[✅PASS]Compilation
(2/3)🤖Generating test case for: CasinoGame_flattened_v_20852978_1747841172.sol
[✅PASS]Read contract
[ℹ️INFO] Contract file already exists in destination, skipping adjust.
[⚠️WARNING]No </think> tag found in input
[✅PASS]Test case generation
[✅PASS]Write test contract file
(3/3)🧪Running tests in CasinoGame_flattened_v_20852978_1747841172.t.sol
(🧪Attempt 1/3)
[ℹ️INFO] Encountered compilation error, applying automatic fixer
[⚠️WARNING]No </think> tag found in input
[✅PASS]Corrected test contract with compilation error
[✅PASS]Updated test file
(🧪Attempt 2/3)
[DEBUG]STDOUT
Compiling 1 files with Solc 0.8.28
Solc 0.8.28 finished in 1.91s
Compiler run successful with warnings:
Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> test/CasinoGame_flattened_v_20852978_1747841172.t.sol:24:61:
   |
24 |     constructor(string memory _name, string memory _symbol, address initialOwner) {
   |                                                             ^^^^^^^^^^^^^^^^^^^^


Ran 12 tests for test/CasinoGame_flattened_v_20852978_1747841172.t.sol:CasinoGameTest
[PASS] testAccessControl_OwnerOnlyFunctions() (gas: 17718)
Traces:
  [17718] CasinoGameTest::testAccessControl_OwnerOnlyFunctions()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf4844814)
    │   └─ ← [Return] 
    ├─ [3197] CasinoGame::updateHouseEdge(300)
    │   └─ ← [Revert] OwnableUnauthorizedAccount(0x000000000000000000000000000000000000bEEF)
    └─ ← [Return] 

[PASS] testAdmin_OwnerTimeoutGame_NonOwner() (gas: 692669)
Traces:
  [695469] CasinoGameTest::testAdmin_OwnerTimeoutGame_NonOwner()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [638334] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit DeckShuffled(player: 0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::warp(361)
    │   └─ ← [Return] 
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf4844814)
    │   └─ ← [Return] 
    ├─ [3311] CasinoGame::ownerTimeoutGame(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Revert] OwnableUnauthorizedAccount(0x000000000000000000000000000000000000bEEF)
    └─ ← [Return] 

[PASS] testAdmin_OwnerTimeoutGame_Success() (gas: 708170)
Traces:
  [733670] CasinoGameTest::testAdmin_OwnerTimeoutGame_Success()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [638334] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit DeckShuffled(player: 0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::warp(361)
    │   └─ ← [Return] 
    ├─ [38098] CasinoGame::ownerTimeoutGame(0x000000000000000000000000000000000000bEEF)
    │   ├─ emit GameResult(player: 0x000000000000000000000000000000000000bEEF, game: "Blackjack", betAmount: 100000000000000000000 [1e20], payout: 0, result: "Admin Timeout")
    │   └─ ← [Return] 
    ├─ [2208] CasinoGame::blackjackGames(0x000000000000000000000000000000000000bEEF) [staticcall]
    │   └─ ← [Return] 100000000000000000000 [1e20], 2, 3, 1
    ├─ [0] VM::assertEq(2, 2, "Game should be finished after admin timeout") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] testAdmin_UpdateHouseEdge() (gas: 26854)
Traces:
  [26854] CasinoGameTest::testAdmin_UpdateHouseEdge()
    ├─ [8523] CasinoGame::updateHouseEdge(500)
    │   └─ ← [Return] 
    ├─ [818] CasinoGame::houseEdgeBP() [staticcall]
    │   └─ ← [Return] 500
    ├─ [0] VM::assertEq(500, 500, "House edge should be updated to 500 bps") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  House edge too high)
    │   └─ ← [Return] 
    ├─ [1411] CasinoGame::updateHouseEdge(1500)
    │   └─ ← [Revert] revert: House edge too high
    └─ ← [Return] 

[PASS] testAdmin_WithdrawProfit_NonOwner() (gas: 17791)
Traces:
  [17791] CasinoGameTest::testAdmin_WithdrawProfit_NonOwner()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf4844814)
    │   └─ ← [Return] 
    ├─ [3223] CasinoGame::withdrawProfit(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Revert] OwnableUnauthorizedAccount(0x000000000000000000000000000000000000bEEF)
    └─ ← [Return] 

[PASS] testAdmin_WithdrawProfit_Success() (gas: 724225)
Traces:
  [772425] CasinoGameTest::testAdmin_WithdrawProfit_Success()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [638334] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit DeckShuffled(player: 0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::warp(361)
    │   └─ ← [Return] 
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [35700] CasinoGame::hit()
    │   ├─ emit GameResult(player: 0x000000000000000000000000000000000000bEEF, game: "Blackjack", betAmount: 100000000000000000000 [1e20], payout: 0, result: "Timeout")
    │   └─ ← [Return] 
    ├─ [840] CasinoGame::houseProfit() [staticcall]
    │   └─ ← [Return] 100000000000000000000 [1e20]
    ├─ [2818] CasinoGame::houseEdgeBP() [staticcall]
    │   └─ ← [Return] 200
    ├─ [3230] TestERC20::balanceOf(CasinoGameTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]) [staticcall]
    │   └─ ← [Return] 10000000000000000000000 [1e22]
    ├─ [21722] CasinoGame::withdrawProfit(CasinoGameTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   ├─ [1230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10100000000000000000000 [1.01e22]
    │   ├─ [8938] TestERC20::transfer(CasinoGameTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 2000000000000000000 [2e18])
    │   │   ├─ emit Transfer(from: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], to: CasinoGameTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], value: 2000000000000000000 [2e18])
    │   │   └─ ← [Return] true
    │   └─ ← [Return] 
    ├─ [840] CasinoGame::houseProfit() [staticcall]
    │   └─ ← [Return] 0
    ├─ [0] VM::assertEq(0, 0, "House profit should be zero after withdrawal") [staticcall]
    │   └─ ← [Return] 
    ├─ [1230] TestERC20::balanceOf(CasinoGameTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]) [staticcall]
    │   └─ ← [Return] 10002000000000000000000 [1e22]
    ├─ [0] VM::assertEq(10002000000000000000000 [1e22], 10002000000000000000000 [1e22], "Owner should receive profit tokens") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] testBlackjack_HitTimeout() (gas: 707420)
Traces:
  [732920] CasinoGameTest::testBlackjack_HitTimeout()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [638334] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit DeckShuffled(player: 0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::warp(361)
    │   └─ ← [Return] 
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [35700] CasinoGame::hit()
    │   ├─ emit GameResult(player: 0x000000000000000000000000000000000000bEEF, game: "Blackjack", betAmount: 100000000000000000000 [1e20], payout: 0, result: "Timeout")
    │   └─ ← [Return] 
    ├─ [2208] CasinoGame::blackjackGames(0x000000000000000000000000000000000000bEEF) [staticcall]
    │   └─ ← [Return] 100000000000000000000 [1e20], 2, 3, 1
    ├─ [0] VM::assertEq(2, 2, "Game should be finished after hit timeout") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] testBlackjack_InsufficientAllowance() (gas: 30143)
Traces:
  [30143] CasinoGameTest::testBlackjack_InsufficientAllowance()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Insufficient allowance)
    │   └─ ← [Return] 
    ├─ [14722] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [3767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 0
    │   └─ ← [Revert] revert: Insufficient allowance
    └─ ← [Return] 

[PASS] testBlackjack_StandTimeout() (gas: 707442)
Traces:
  [732942] CasinoGameTest::testBlackjack_StandTimeout()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [638334] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit DeckShuffled(player: 0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::warp(361)
    │   └─ ← [Return] 
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [35942] CasinoGame::stand()
    │   ├─ emit GameResult(player: 0x000000000000000000000000000000000000bEEF, game: "Blackjack", betAmount: 100000000000000000000 [1e20], payout: 0, result: "Timeout")
    │   └─ ← [Return] 
    ├─ [2208] CasinoGame::blackjackGames(0x000000000000000000000000000000000000bEEF) [staticcall]
    │   └─ ← [Return] 100000000000000000000 [1e20], 2, 3, 1
    ├─ [0] VM::assertEq(2, 2, "Game should be finished after stand timeout") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] testBlackjack_StartGame() (gas: 697240)
Traces:
  [700040] CasinoGameTest::testBlackjack_StartGame()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [638334] CasinoGame::startBlackjack(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit DeckShuffled(player: 0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [2208] CasinoGame::blackjackGames(0x000000000000000000000000000000000000bEEF) [staticcall]
    │   └─ ← [Return] 100000000000000000000 [1e20], 1, 3, 1
    ├─ [0] VM::assertEq(1, 1, "Game state should be Playing after startBlackjack") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(100000000000000000000 [1e20], 100000000000000000000 [1e20], "Bet amount must match the provided amount") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(3, 3, "Total cards dealt should be 3") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertGt(1, 0, "StartedAt timestamp must be set") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

[PASS] testSlots_InsufficientAllowance() (gas: 29505)
Traces:
  [29505] CasinoGameTest::testSlots_InsufficientAllowance()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Insufficient allowance)
    │   └─ ← [Return] 
    ├─ [14436] CasinoGame::playSlots(100000000000000000000 [1e20])
    │   ├─ [3767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 0
    │   └─ ← [Revert] revert: Insufficient allowance
    └─ ← [Return] 

[PASS] testSlots_TotalReservedReset() (gas: 144155)
Traces:
  [166855] CasinoGameTest::testSlots_TotalReservedReset()
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [26084] TestERC20::approve(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000000000000000000000 [1e22])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000bEEF, spender: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 10000000000000000000000 [1e22])
    │   └─ ← [Return] true
    ├─ [3230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   └─ ← [Return] 10000000000000000000000 [1e22]
    ├─ [2950] CasinoGame::totalReserved() [staticcall]
    │   └─ ← [Return] 0
    ├─ [0] VM::prank(0x000000000000000000000000000000000000bEEF)
    │   └─ ← [Return] 
    ├─ [105292] CasinoGame::playSlots(100000000000000000000 [1e20])
    │   ├─ [1767] TestERC20::allowance(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [1230] TestERC20::balanceOf(CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   ├─ [16164] TestERC20::transferFrom(0x000000000000000000000000000000000000bEEF, CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 100000000000000000000 [1e20])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000bEEF, to: CasinoGame: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], value: 100000000000000000000 [1e20])
    │   │   └─ ← [Return] true
    │   ├─ emit GameResult(player: 0x000000000000000000000000000000000000bEEF, game: "Slots", betAmount: 100000000000000000000 [1e20], payout: 0, result: "Lose")
    │   └─ ← [Return] 
    ├─ [950] CasinoGame::totalReserved() [staticcall]
    │   └─ ← [Return] 0
    ├─ [0] VM::assertEq(0, 0, "Total reserved funds should be reset to 0 after playSlots") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

Suite result: ok. 12 passed; 0 failed; 0 skipped; finished in 10.61ms (16.21ms CPU time)

Ran 1 test suite in 781.75ms (10.61ms CPU time): 12 tests passed, 0 failed, 0 skipped (12 total tests)

🧹Start Cleaning
[✅PASS]Moved test file to 'finished'
